cabal-version:       2.4

-- Initial package description 'esa-sle.cabal' generated by 'cabal init'.
-- For further documentation, see http://haskell.org/cabal/users-guide/

-- The name of the package.
name:                esa-sle

-- The package version.  See the Haskell package versioning policy (PVP)
-- for standards guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0

-- A short (one-line) description of the package.
synopsis: A library for handling the CCSDS SLE protocol

-- A longer description of the package.
-- description:

-- A URL where users can report bugs.
-- bug-reports:

-- The license under which the package is released.
license:             BSD-3-Clause

-- The file containing the license text.
license-file:        LICENSE

-- The package author(s).
author:              Michael Oswald

-- An email address to which users can send suggestions, bug reports, and
-- patches.
maintainer:          michael.oswald@onikudaki.net

-- A copyright notice.
-- copyright:

category:            Network

-- Extra files to be distributed with the package, such as examples or a
-- README.
extra-source-files:  CHANGELOG.md

flag llvm
    description:
        build library with llvm
    default: False

flag optimize
    description:
      build library with optimization
    default: False

library
  -- Modules exported by the library.
  exposed-modules:
    Data.SLE.Api
    Data.SLE.Input
    Data.SLE.TMLMessage
    Data.SLE.TMLConfig
    Data.SLE.TMLProtocol
    Data.SLE.RAF
    Data.SLE.CCSDSTime
    Data.SLE.ServiceInstanceID
    Data.SLE.Common
    Data.SLE.DEL
    Data.SLE.AUL
    Data.SLE.PDU
    Data.SLE.Bind
    Data.SLE.Config
    Data.SLE.Handle
    Conduit.SocketReconnector
    State.AppState
    State.Classes
    State.Events

  -- Other library packages from which modules are imported.
  build-depends:       
    base ==4.*,
    rio,
    attoparsec,
    attoparsec-binary,
    bytestring-strict-builder,
    lens,
    bytestring,
    aeson,
    conduit-extra,
    timers-updatable,
    text,
    conduit,
    conduit-extra,
    stm-conduit,
    asn1-types,
    asn1-encoding,
    time,
    splitmix,
    network,
    mtl,
    text-builder,
    cryptohash-sha256,
    aeson-pretty,
    pretty-show 



  -- Modules included in this library but not exported.
  -- other-modules:

  -- LANGUAGE extensions used by modules in this package.
  -- other-extensions:
  default-extensions:
        AutoDeriveTypeable
        BangPatterns
        BinaryLiterals
        ConstraintKinds
        DataKinds
        DefaultSignatures
        DeriveDataTypeable
        DeriveFoldable
        DeriveFunctor
        DeriveGeneric
        DeriveTraversable
        DoAndIfThenElse
        EmptyDataDecls
        ExistentialQuantification
        FlexibleContexts
        FlexibleInstances
        FunctionalDependencies
        GADTs
        GeneralizedNewtypeDeriving
        InstanceSigs
        KindSignatures
        LambdaCase
        MultiParamTypeClasses
        MultiWayIf
        NamedFieldPuns
        NoImplicitPrelude
        OverloadedStrings
        PartialTypeSignatures
        PatternGuards
        PolyKinds
        RankNTypes
        RecordWildCards
        ScopedTypeVariables
        StandaloneDeriving
        TupleSections
        TypeFamilies
        TypeSynonymInstances
        TypeApplications
        ViewPatterns
        NumericUnderscores



  -- Directories containing source files.
  hs-source-dirs:      src

  -- Base language which the package is written in.
  default-language:    Haskell2010


  if flag(llvm)
    ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                -funbox-strict-fields -fllvm -optlo-O3
  else
    if flag(optimize)
      ghc-options: -O2 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields
    else
      ghc-options: -O0 -Wall -Wcompat -Widentities -Wincomplete-record-updates
                     -Wincomplete-uni-patterns -Wredundant-constraints -Wpartial-fields
                     -funbox-strict-fields



executable SleClient
    main-is: SleClient.hs
    default-language: Haskell2010
    hs-source-dirs: src/test
    ghc-options: -Wall -O -threaded -rtsopts
    build-depends:
        esa-sle -any,
        base ==4.*,
        bytestring,
        rio,
        text


executable SleServer
    main-is: SleServer.hs
    default-language: Haskell2010
    hs-source-dirs: src/test
    ghc-options: -Wall -O -threaded -rtsopts
    build-depends:
        esa-sle -any,
        base ==4.*,
        bytestring,
        rio,
        text,
        optparse-generic,
        directory


test-suite TestBindParser 
    type: exitcode-stdio-1.0
    main-is: TestBindParser.hs
    default-language: Haskell2010
    hs-source-dirs: src/test
    ghc-options: -Wall -O -threaded -rtsopts
    build-depends:
        esa-sle -any,
        base ==4.*,
        bytestring,
        rio,
        text,
        asn1-encoding,
        asn1-types,
        hspec
